name: Release on SemVer Tag Push
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  release-on-tag-push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Get the git version
        id: get_git_version
        run: echo ::set-output name=GIT_VERSION::$(echo $GITHUB_REF | cut -d / -f 3 )
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | sed -r 's/^.{1}//' )
      - name: draft-release
        id: draft-release-id
        uses: release-drafter/release-drafter@v5
        with:
          tag: ${{ steps.get_git_version.outputs.GIT_VERSION }}
          version: ${{ steps.get_git_version.outputs.GIT_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: copy bin to deb resources
        run: mkdir -p debian_resources/usr/bin && cp "solar_initial_bash_service(deprecated)/develop/ladex10.sh" debian_resources/usr/bin/ladex10.sh
      - name: build deb
        uses: jiro4989/build-deb-action@v2
        with:
          package: solar
          package_root: debian_resources
          maintainer: Oli
          version: ${{ steps.get_version.outputs.VERSION }}
          arch: 'armhf'
          depends: 'python3, wiringpi'
          desc: 'ladex10 systemd service'
      - name: Upload Deb as Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft-release-id.outputs.upload_url }}
          # file name is build like this: ${INPUT_PACKAGE}_${FIXED_VERSION}_${INPUT_ARCH}.deb, sadly not passed as actions output :(
          asset_path: ./solar_${{ steps.get_version.outputs.VERSION }}_armhf.deb
          asset_name: solar_${{ steps.get_version.outputs.VERSION }}_armhf.deb
          asset_content_type: application/deb
      - name: Publish the release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.draft-release-id.outputs.id }}